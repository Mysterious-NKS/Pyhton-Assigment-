production_log = []
equipment_log = []
username1 = "1"
password1 = "1"

def chef_login():
    while True:
      print("==== Chef Login ====")
      c_name = input("Username: ")
      c_pass = input("Password: ")

      if c_name == username1 and c_pass == password1:
         print("Login Successful")
         break
      else:
         print("Wrong Username or Password")
         continue



food_drink_list = [
    {"name": "Burger", "price": 15, "recipe": "Delicious beef burgers"},
    {"name": "Pizza", "price": 20, "recipe": "pepperoni"},
    {"name": "Salad", "price": 10, "recipe": "Healthy green salad"},
    {"name": "Sushi", "price": 25, "recipe": "Fresh sushi platter"},
    {"name": "Tacos", "price": 12, "recipe": "Spicy Mexican tacos"},
    {"name": "Pasta", "price": 18, "recipe": "Classic Italian pasta"},
    {"name": "Tea", "price": 4, "recipe": "A warm made tea from hometown"},
    {"name": "Water", "price": 1.50, "recipe": "Average fresh water"}
]

food_inv = {
    "Bread": {"quantity": 100, "unit": "10kg"},
    "Pepperoni": {"quantity": 50, "unit": "20kg"},
    "Ham": {"quantity": 30, "unit":  "30kg"},
    "Lettuce": {"quantity": 75, "unit": "40kg"},
    "Tomato sauce": {"quantity": 20, "unit": "10000ml"},
    "Fish": {"quantity": 50, "unit": "50kg"},
    "Rice": {"quantity": 100, "unit": "60kg"},
    "Tomato": {"quantity": 12, "unit": "70kg"},
    "Chicken": {"quantity": 50, "unit": "80kg"},
    "Flour": {"quantity": 500, "unit": "90kg"}
}

# for item in food_list:
#     print(f"Name: {item['name']},  Price: {item['price']},  Recipe: {item['recipe']}")


def add_recipe():
    print("Please insert your recipe")
    print("Press Enter without typing anything to finish.")
    while True:
        food = input("Name (press Enter to finish): ").strip()

        if not food:
            break

        if not food:
            print("Food or drink name is required.")
            continue

            ask_menu = input("Type ('food' or 'drink'): ")
            if type_input not in ["food", "drink"]:
                print("Invalid type. Must be 'food' or 'drink'.")
                continue

            price = input("Price (press Enter to skip): ").strip()
            recipe = input("Recipe (press Enter to skip): ").strip()

        type_input = input("Type ('food' or 'drink'): ").strip().lower()
        if type_input not in ["food", "drink"]:
            print("Invalid type. Must be 'food' or 'drink'.")
            continue

        price = input("Price (press Enter to skip): ").strip()
        recipe = input("Recipe (press Enter to skip): ").strip()

        # Set defaults for price and recipe
        if not price:
            price = 0
        else:
            try:
                price = float(price)
            except ValueError:
                print("Invalid price entered. Defaulting to 0.")
                price = 0
        if not recipe:
            recipe = "No recipe provided"

        new_recipe = {
            "name": food,
            "price": price,
            "recipe": recipe
        }

        food_drink_list.append(new_recipe)
        print(f"Added Name: {food}, Price: {price}, Recipe: {recipe}")
        print("")

    # print("\nUpdated Recipe List:")
    # for item in food_drink_list:
    #     print(f"Name: {item['name']}, Price: RM{item['price']}, Recipe: {item['recipe']}")



def remove_recipe():
    print("==== Delete Food and Drinks ====")
    name_q = input("Enter the food or drink name to remove everything: ").strip()
    exit_choice = input("Do you want to proceed with deletion? (yes to proceed / no to cancel): ")

    if exit_choice == 'no':
        print("Exiting the process...")
        return

    recipe_found = False

    for this_list in food_drink_list:
        if this_list['name'] == name_q:
            food_drink_list.remove(this_list)
            print(f"Dish '{name_q}' along with its price and recipe has been deleted!")
            recipe_found = True
            break

        if not recipe_found:
            print("Recipe not found.")

def update_menu():
    update_txt = input("Enter the name of the food or drink to update: ")

    for item in food_drink_list:
        if item['name'] == update_txt:
            print(f"Current menu: ")
            print(f"Name: {item['name']}, Price: {item['price']}, Recipe: {item['recipe']}")

            new_name = input("Enter new name (press Enter to skip): ")
            new_price = input("Enter new price (press Enter to skip): ")
            new_recipe = input("Enter new recipe (press Enter to skip): ")

            if new_name:
                item['name'] = new_name
            if new_price:
                try:
                    item['price'] = float(new_price)
                except ValueError:
                        print("Invalid price. Keeping the old price.")
            if new_recipe:
                item['recipe'] = new_recipe

            print(f"Dish '{update_txt}' updated successfully!\n")
            return

    print(f"'{update_txt}' not found in the food list.\n")


def view_menu():
    print("==== Menu ====")
    print("-" * 60)
    print(f"{'Name':<10} | {'Price (RM)':<10} | {'Recipe'}")
    print("-" * 60)
    if not food_drink_list:
        print("The food list is currently empty.")
        return

    for item in food_drink_list:
        print(f"{item['name']:<10} | {item['price']:<10} | {item['recipe']}")
    print("-" * 60)
    print("")


def check_inv():
    print("==== Inventory Check ====")
    print("Enter the ingredient to proceed. ")
    check_ing = input("Ingredient: ")
    if check_ing in food_inv:
        quantity = food_inv[check_ing]["quantity"]
        unit = food_inv[check_ing]["unit"]
        print("")
        print(f"= {check_ing.capitalize()} =")
        print(f"Quantity: {quantity}   Weight: {unit}")
        print("")
    else:
        print(f"'{check_ing.capitalize()}' not available in the inventory.")

def rec_production():
    food_name = input("Enter the name of the food or drink produced: ")
    batch_number = input("Enter batch number food or drink (required 10 characters) : ")
    if len(batch_number) != 10:
        print("Batch number must be 10 characters or fewer. Please try again.")
        return

    quantity = input("Enter production quantity: ")
    expiration_date = input("Enter expiration date (YYYY-MM-DD): ")

    production_log.append({
        "food_name": food_name,
        "batch_number": batch_number,
        "quantity": quantity,
        "expiration_date": expiration_date
        })
    print(f"Production record for '{food_name}' added successfully!\n")

def view_production():
    print("==== Production Log ====")
    if not production_log:
        print("No production records available.")
    else:
        for record in production_log:
            print(f"Food: {record['dish_name']}")
            print(f"Batch Number: {record['batch_number']}")
            print(f"Quantity: {record['quantity']}")
            print(f"Expiration Date: {record['expiration_date']}")
            print("-" * 30)

def report_equip_i():
    print("== Report ==")
    equipment_name = input("Enter equipment name: ")
    issue_description = input("Reason: ")

    equipment_log.append({
        "equipment_name": equipment_name,
        "issue_description": issue_description
    })
    print(f"Issue reported for '{equipment_name}' successfully!\n")

def view_equip_i():
    print("==== Equipment Issues Log ====")
    if not equipment_log:
        print("No equipment issues reported.")
    else:
        for issue in equipment_log:
            print(f"Equipment: {issue['equipment_name']}")
            print(f"Issue: {issue['issue_description']}")
            print("-" * 30)

def chef_settings():
 while True:
    print("==== Chef Settings ====")
    print("1. Add Food/Drink")
    print("2. Update Food/Drink")
    print("3. Delete Food/Drink")
    print("4. View Menu")
    print("5. Check Inventory")
    print("6. Record Production")
    print("7. View production")
    print("8. Report Equipment Issue")
    print("9. View Equipment Issues")
    print("0. Exit")

    choice = input("Choose an option: ")
    if choice == "1":
        add_recipe()
    elif choice == "2":
        update_menu()
    elif choice == "3":
        remove_recipe()
    elif choice == "4":
        view_menu()
    elif choice == "5":
        check_inv()
    elif choice == "6":
        rec_production()
    elif choice == "7":
        view_production()
    elif choice == '8':
        report_equip_i()
    elif choice == '9':
        view_equip_i()
    elif choice == "0":
        print("Exiting...")
        break
    else:
        print("Invalid choice, please try again.")














